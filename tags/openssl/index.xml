<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openssl on 凝雨 - Yun</title>
    <link>https://ningyu1.github.io/site/tags/openssl/</link>
    <description>Recent content in Openssl on 凝雨 - Yun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jan 2018 14:08:36 +0000</lastBuildDate>
    
	<atom:link href="https://ningyu1.github.io/site/tags/openssl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java访问SSL地址，使用证书方式和免验证证书方式</title>
      <link>https://ningyu1.github.io/site/post/53-ssl-cert-3/</link>
      <pubDate>Mon, 15 Jan 2018 14:08:36 +0000</pubDate>
      
      <guid>https://ningyu1.github.io/site/post/53-ssl-cert-3/</guid>
      <description>前文回顾 《Openssl生成自签名证书，简单步骤》中讲述了如何生成自签名证书。
《使用自签名证书，简单步骤》中讲述了如何使用自签名证书。
下面讲述在Java中如何访问SSL地址，使用证书访问和免验证证书访问。
Java安装证书访问SSL地址 使用InstallCert安装证书 《使用自签名证书，简单步骤》这篇文章中介绍的InstallCert生成jssecacerts文件。 将ssecacerts文件放入%JAVA_HOME%\jre\lib\security 下即可。
使用keytool工具导入证书 keytool -import -alias xstore -keystore &amp;quot;cacerts_path&amp;quot; -file a.cer   cacerts_path: 你的cacerts文件路径，一般在%JAVA_HOME%jre\lib\security\cacerts a.cer: 你需要导入的cer文件路径，可以是InstallCert生成的文件 密码使用jdk默认密码：changeit，或者在上面命令后增加-storepass changeit设置密码参数  通过上面两种方式可以将证书安装到jdk下，接下来就是java中如何访问ssl地址，不多说直接上代码。
自定义javax.net.ssl.X509TrustManager实现类 import java.security.cert.CertificateException; import java.security.cert.X509Certificate; import javax.net.ssl.X509TrustManager; public class MyX509TrustManager implements X509TrustManager { @Override public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException { } @Override public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException { } @Override public X509Certificate[] getAcceptedIssuers() { return null; } }  包装HttpsDemo类 HttpsDemo类中包装两个方法，sendHttps发起ssl地址请求，sendHttp发起普通地址请求</description>
    </item>
    
    <item>
      <title>使用自签名证书，简单步骤</title>
      <link>https://ningyu1.github.io/site/post/52-ssl-cert-2/</link>
      <pubDate>Fri, 12 Jan 2018 19:13:36 +0000</pubDate>
      
      <guid>https://ningyu1.github.io/site/post/52-ssl-cert-2/</guid>
      <description>在前文《Openssl生成自签名证书，简单步骤》中讲述了如何生成自签名证书，接下来整理证书使用遇到的问题。
证书使用的方式也有很多中，可以使用keytool生成或导入导出证书，这里对keytool不做过多描述，可以通过&amp;ndash;help查看使用方法。
证书文件可以放到应用服务器、负载均衡、jvm中使用，如：IIS、tomcat、nginx或者loadbalance、jdk等等。
这里介绍一个简单的工具：InstallCert安装证书文件到jdk下，这个在本地调试连接ssl服务器代码的时候很有用。
如果我们的服务端使用的是jdk1.8（比如说：cas服务），访问的客户端（业务系统）也是jdk1.8，那么直接使用InstallCert安装即可.
如果我们的服务端使用的是jdk1.8，但是客户端使用jdk1.7会遇到什么问题？
我们都知道jdk1.7默认的TLS版本是1.0但是支持1.1和1.2，如何查看jdk支持的TLS版本呢？
可以使用jdk自带的jcp（java control panel）工具
jcp（java control panel）路径：%JAVA_HOME%\jre\bin
点击高级，勾选TLS1.1 TSL1.2开启支持。
如果使用客户端程序（jdk1.7开发的）访问服务端程序（jdk1.8开发的），在使用InstallCert安装证书时会出现如下错误：
javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:946) ~[na:1.7.0_45] at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1312) ~[na:1.7.0_45]  上面错误的意思就是服务器把你拒绝了！把你拒绝了！把你拒绝了！拒绝你的理由就是TLS版本不对。
下面我主要讲在客户端程序（jdk1.7开发的）访问服务端程序（jdk1.8开发的）的场景下安装证书如何解决上面的错误。
通过InstallCert源码安装证书 /* * Copyright 2006 Sun Microsystems, Inc. All Rights Reserved. * * Redistribution and use in source and binary forms, with or without * modification, are permitted provided that the following conditions * are met: * * - Redistributions of source code must retain the above copyright * notice, this list of conditions and the following disclaimer.</description>
    </item>
    
    <item>
      <title>Openssl生成自签名证书，简单步骤</title>
      <link>https://ningyu1.github.io/site/post/51-ssl-cert/</link>
      <pubDate>Fri, 12 Jan 2018 17:06:36 +0000</pubDate>
      
      <guid>https://ningyu1.github.io/site/post/51-ssl-cert/</guid>
      <description>最近在调试服务时需要使用证书，因此对证书的生成和使用做了一些整理，网上关于这部分资料也很多，但是很杂乱，我整理出以下简单的步骤生成自签名证书，具体让我们来看一看吧。
第一种方式 通过openssl生成私钥
openssl genrsa -out server.key 1024  使用私钥生成自签名的cert证书文件，以下是通过参数只定证书需要的信息
openssl req -new -x509 -days 3650 -key server.key -out server.crt -subj &amp;quot;/C=CN/ST=mykey/L=mykey/O=mykey/OU=mykey/CN=domain1/CN=domain2/CN=domain3&amp;quot;  如果对上面参数具体的说明不太了解的，可以使用不带参数的方式，通过命令行步骤生成，参考第二种方式。
第二种方式 通过openssl生成私钥
openssl genrsa -out server.key 1024  根据私钥生成证书申请文件csr
openssl req -new -key server.key -out server.csr  这里根据命令行向导来进行信息输入：
ps.Common Name可以输入：*.yourdomain.com，这种方式生成通配符域名证书
使用私钥对证书申请进行签名从而生成证书
openssl x509 -req -in server.csr -out server.crt -signkey server.key -days 3650  这样就生成了有效期为：10年的证书文件，对于自己内网服务使用足够。
第三种方式 直接生成证书文件
openssl req -new -x509 -keyout server.key -out server.crt -config openssl.</description>
    </item>
    
  </channel>
</rss>